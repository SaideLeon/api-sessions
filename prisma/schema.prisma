generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String
  phoneNumber String    @unique
  createdAt   DateTime  @default(now())
  sessions    Session[]
  loginSessions LoginSession[]
}

model LoginSession {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  userAgent String
  ipAddress String
  isValid   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id        Int       @id @default(autoincrement())
  sessionId String    @unique
  userId    Int
  createdAt DateTime  @default(now())
  messages  Message[]
  seller    Seller[]
  user      User      @relation(fields: [userId], references: [id])
  vendors   Vendor[]
}

model Message {
  id          Int      @id @default(autoincrement())
  sessionId   String
  sender      String
  content     String
  mediaUrl    String?
  createdAt   DateTime @default(now())
  phoneNumber String
  session     Session  @relation(fields: [sessionId], references: [sessionId])
}

model Vendor {
  id          Int      @id @default(autoincrement())
  sessionId   String   @unique
  phoneNumber String
  vendorName  String
  createdAt   DateTime @default(now())
  session     Session  @relation(fields: [sessionId], references: [sessionId])
}

model Seller {
  id          Int      @id @default(autoincrement())
  sessionId   String
  sellerName  String
  product     String
  description String
  image       String?
  benefits    String
  createdAt   DateTime @default(now())
  session     Session  @relation(fields: [sessionId], references: [sessionId])

  @@unique([sessionId, sellerName])
}